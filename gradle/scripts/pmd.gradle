apply plugin: 'pmd'

task pmd(type: Pmd) {
    description 'Run PMD'

    ruleSetFiles = files("$rootDir/gradle/config/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.required = true
        html.required = false
    }

    ignoreFailures = true
}

afterEvaluate {
    def variants = plugins.hasPlugin('com.android.application') ?
            android.applicationVariants : android.libraryVariants

    variants.each { variant ->
        def task = tasks.create("pmd${variant.name.capitalize()}", Pmd) {
            ruleSetFiles = files("$rootDir/gradle/config/pmd-ruleset.xml")
            ruleSets = []

            source 'src'
            include '**/*.java'
            exclude '**/gen/**'

            reports {
                xml.required = false
                html.required = true
            }

            ignoreFailures = true

            dependsOn(variant.javaCompileProvider.get())
        }
        tasks.getByName('check').dependsOn(task)
    }
}

// PMD's duplicate code tool
cpd {
    language = 'java'
}

cpdCheck {
    reports {
        text.required = false
        xml.required = true
        xml.destination file("${buildDir}/reports/pmd/duplicates.xml")
    }
    source = 'src/main/java'
    exclude "**/*.kt"
    ignoreFailures = true
}

check.dependsOn('cpdCheck')